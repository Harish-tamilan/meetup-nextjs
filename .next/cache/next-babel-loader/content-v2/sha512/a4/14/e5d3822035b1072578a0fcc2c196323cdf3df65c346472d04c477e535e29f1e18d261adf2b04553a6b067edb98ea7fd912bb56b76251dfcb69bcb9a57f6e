{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zolo/harish/react/meetups-nextjs/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetup.image,\n      title: props.meetup.title,\n      address: props.meetup.address,\n      description: props.meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/zolo/harish/react/meetups-nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Index","props","meetup","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,KAAT,CAAeC,KAAf,EACA;AACI,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KAAlC;AAAyC,MAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaE,KAA7D;AAAoE,MAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaG,OAA1F;AAAmG,MAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAA7H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAPQN,K;;AA6CT,eAAeA,KAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction Index(props)\n{\n    return(\n        <Fragment>\n            <MeetupDetail image={props.meetup.image} title={props.meetup.title} address={props.meetup.address} description={props.meetup.description}/>\n        </Fragment>\n    )\n}\n\nexport async function getStaticPaths()\n{\n    const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetup');\n    const responseData = await meetupCollection.find({},{_id:1}).toArray();\n    client.close();\n    console.log(responseData);\n    return{\n        fallback:'blocking',\n        paths: responseData.map((meetup)=>({\n            params:{meetupId:meetup._id.toString()},\n        }))\n    };\n}\n\nexport async function getStaticProps(context)\n{\n    console.log('inside getStaticProps');\n    const id = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetup');\n    const responseData = await meetupCollection.findOne({_id:ObjectId(id)});\n    console.log(responseData);\n\n    return{\n        props:{meetup:{\n            title: meetup.title,\n            address: meetup.address,\n            image: meetup.image,\n            id: meetup._id.toString(),\n        }}\n    }\n}\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}