{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zolo/harish/react/meetups-nextjs/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetup.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetup.image,\n      title: props.meetup.title,\n      address: props.meetup.address,\n      description: props.meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/zolo/harish/react/meetups-nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","Index","props","meetup","title","description","image","address"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EACA;AACI,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,MAAN,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaE;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaG,KAAlC;AAAyC,MAAA,KAAK,EAAEJ,KAAK,CAACC,MAAN,CAAaC,KAA7D;AAAoE,MAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaI,OAA1F;AAAmG,MAAA,WAAW,EAAEL,KAAK,CAACC,MAAN,CAAaE;AAA7H;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAXQJ,K;;AAiDT,eAAeA,KAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head';\n\nfunction Index(props)\n{\n    return(\n        <Fragment>\n            <Head>\n                <title>{props.meetup.title}</title>\n                <meta name='description' content={props.meetup.description} />\n            </Head>\n            <MeetupDetail image={props.meetup.image} title={props.meetup.title} address={props.meetup.address} description={props.meetup.description}/>\n        </Fragment>\n    )\n}\n\nexport async function getStaticPaths()\n{\n    const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetup');\n    const responseData = await meetupCollection.find({},{_id:1}).toArray();\n    client.close();\n    console.log(responseData);\n    return{\n        fallback:'blocking',\n        paths: responseData.map((meetup)=>({\n            params:{meetupId:meetup._id.toString()},\n        }))\n    };\n}\n\nexport async function getStaticProps(context)\n{\n    console.log('inside getStaticProps');\n    const id = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetup');\n    const responseData = await meetupCollection.findOne({_id:ObjectId(id)});\n    console.log(responseData);\n\n    return{\n        props:{meetup:{\n            title: responseData.title,\n            address: responseData.address,\n            image: responseData.image,\n            id: responseData._id.toString(),\n        }}\n    }\n}\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}