{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head';\n\nfunction Index(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetup.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetup.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      image: props.meetup.image,\n      title: props.meetup.title,\n      address: props.meetup.address,\n      description: props.meetup.description\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetup');\n  const responseData = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  console.log(responseData);\n  return {\n    fallback: 'blocking',\n    paths: responseData.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  console.log('inside getStaticProps');\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://harish:harish8249@cluster0.xacsm.mongodb.net/meetup?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetup');\n  const responseData = await meetupCollection.findOne({\n    _id: ObjectId(id)\n  });\n  console.log(responseData);\n  return {\n    props: {\n      meetup: {\n        title: responseData.title,\n        address: responseData.address,\n        image: responseData.image,\n        id: responseData._id.toString()\n      }\n    }\n  };\n}\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}